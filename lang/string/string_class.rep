#ifndef COAL_LANG_STRING_CLASS_REP__
#define COAL_LANG_STRING_CLASS_REP__

#include <coal/core/implementation.h>

/**
 * lang_string(metaclass)
 * Metaclass for strings.
 *
 * @extends lang(metaclass)
 * @constructor takes 10 arguments
 * @param (const char *) name of class
 * @param (const class(metaclass) *) super class
 * @param (size_t) size of instances in bytes
 * @param (int (*cmp)(const var, const var)) pointer to comparison function
 * @param (var (*constructor)(var, va_list *)) pointer to constructor
 * @param (var (*destructor)(var)) pointer to destructor
 * @param (bool (*equals)(const var, const var)) pointer to equality function
 * @param (int (*hashCode)(const var)) pointer to hash function
 * @param (var (*toString)(const var)) pointer to string function
 * @param (var (*concat)(const var, const var)) pointer to concatenation function
 */
cfundecl__ (const var lang_string(metaclass) (void));

class (string_metaclass) {
  extends(metaclass);

  var (*concat)(const var self, const var other);
};

#endif /* COAL_LANG_STRING_REP__ */
